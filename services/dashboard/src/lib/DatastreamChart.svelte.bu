<script lang="ts">
	import { API } from './api';
	import {
		Chart,
		LineController,
		LineElement,
		CategoryScale,
		LinearScale,
		PointElement,
		Colors,
		TimeSeriesScale
	} from 'chart.js';
	import 'chartjs-adapter-date-fns';
	Chart.register(
		LineElement,
		LineController,
		CategoryScale,
		LinearScale,
		PointElement,
		Colors as any,
		TimeSeriesScale
	);

	export let id: string;
	export let start = new Date(Date.now() - 24 * 60 * 60 * 1000000);
	export let end = new Date();

	let chart: Chart;
	function useChart(container: HTMLCanvasElement) {
		chart = new Chart(container, {
			type: 'line',
			data: {
				datasets: []
			},
			options: {
				scales: {
					x: {
						type: 'timeseries'
					}
				},
				plugins: {
					tooltip: {
						enabled: true
					}
				}
			}
		});
	}

	let data: [string, number][] = [];

	$: {
		API.getMeasurements(start, end, { datastream: id }).then((m) => {
			data = m.map((e) => [e.measurement_timestamp, e.measurement_value]);
		});
	}

	$: {
		(() => {
			if (!chart) return;
			chart.data.datasets = [{ data }];
			chart.update();
		})();
	}
</script>

<canvas use:useChart />
