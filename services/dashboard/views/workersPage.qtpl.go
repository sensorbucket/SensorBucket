// Code generated by qtc from "workersPage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/workersPage.qtpl:1
package views

//line views/workersPage.qtpl:1
import "sensorbucket.nl/sensorbucket/pkg/api"

//line views/workersPage.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/workersPage.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/workersPage.qtpl:3
func (p *WorkerListPage) StreamBody(qw422016 *qt422016.Writer) {
//line views/workersPage.qtpl:3
	qw422016.N().S(`
    <div 
        class="w-full xl:w-2/3 mx-auto bg-white border rounded-md"
    >
        <header class="w-full flex items-center justify-between border-b py-2 px-4 text-sm text-slate-700">
            <section>
                SensorBucket Worker List
            </section>
            <section class="flex gap-2">
                <button 
                    class="text-xs bg-emerald-400 hover:bg-emerald-500 text-white border border-emerald-500 rounded px-2 py-1"
                    hx-get="/workers/create"
                    hx-target="main"
                    hx-push-url="true"
                >
                Create
                </button>
            </section>
        </header>
        <div>
            `)
//line views/workersPage.qtpl:23
	StreamRenderWorkerTable(qw422016, p.Workers)
//line views/workersPage.qtpl:23
	qw422016.N().S(`
        </div>
    </div>
`)
//line views/workersPage.qtpl:26
}

//line views/workersPage.qtpl:26
func (p *WorkerListPage) WriteBody(qq422016 qtio422016.Writer) {
//line views/workersPage.qtpl:26
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/workersPage.qtpl:26
	p.StreamBody(qw422016)
//line views/workersPage.qtpl:26
	qt422016.ReleaseWriter(qw422016)
//line views/workersPage.qtpl:26
}

//line views/workersPage.qtpl:26
func (p *WorkerListPage) Body() string {
//line views/workersPage.qtpl:26
	qb422016 := qt422016.AcquireByteBuffer()
//line views/workersPage.qtpl:26
	p.WriteBody(qb422016)
//line views/workersPage.qtpl:26
	qs422016 := string(qb422016.B)
//line views/workersPage.qtpl:26
	qt422016.ReleaseByteBuffer(qb422016)
//line views/workersPage.qtpl:26
	return qs422016
//line views/workersPage.qtpl:26
}

//line views/workersPage.qtpl:28
func StreamRenderWorkerTable(qw422016 *qt422016.Writer, workers []api.UserWorker) {
//line views/workersPage.qtpl:28
	qw422016.N().S(`
    <table class="w-full text-sm border-separate border-spacing-0" id="device-table">
        <thead class="text-left text-slate-500 sticky top-0 bg-white">
            <tr class="h-10">
                <th class="font-normal border-b align-middle px-4">
                    Name
                </th>
                <th class="font-normal border-b align-middle px-4">
                    Major version
                </th>
                <th class="font-normal border-b align-middle px-4">
                    Revision
                </th>
                <th class="font-normal border-b align-middle px-4">
                    ID
                </th>
                <th class="font-normal border-b align-middle px-4">
                    Description
                </th>
                <th class="font-normal border-b align-middle px-4">
                    Language
                </th>
            </tr>
        </thead>
        <tbody>
            `)
//line views/workersPage.qtpl:53
	StreamRenderWorkerTableRows(qw422016, workers, "")
//line views/workersPage.qtpl:53
	qw422016.N().S(`
        </tbody>
    </table>
`)
//line views/workersPage.qtpl:56
}

//line views/workersPage.qtpl:56
func WriteRenderWorkerTable(qq422016 qtio422016.Writer, workers []api.UserWorker) {
//line views/workersPage.qtpl:56
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/workersPage.qtpl:56
	StreamRenderWorkerTable(qw422016, workers)
//line views/workersPage.qtpl:56
	qt422016.ReleaseWriter(qw422016)
//line views/workersPage.qtpl:56
}

//line views/workersPage.qtpl:56
func RenderWorkerTable(workers []api.UserWorker) string {
//line views/workersPage.qtpl:56
	qb422016 := qt422016.AcquireByteBuffer()
//line views/workersPage.qtpl:56
	WriteRenderWorkerTable(qb422016, workers)
//line views/workersPage.qtpl:56
	qs422016 := string(qb422016.B)
//line views/workersPage.qtpl:56
	qt422016.ReleaseByteBuffer(qb422016)
//line views/workersPage.qtpl:56
	return qs422016
//line views/workersPage.qtpl:56
}

//line views/workersPage.qtpl:58
func StreamRenderWorkerTableRows(qw422016 *qt422016.Writer, workers []api.UserWorker, nextPage string) {
//line views/workersPage.qtpl:58
	qw422016.N().S(`
    `)
//line views/workersPage.qtpl:59
	for ix, worker := range workers {
//line views/workersPage.qtpl:59
		qw422016.N().S(`
    <tr
        class="hover:bg-slate-50 group"
        `)
//line views/workersPage.qtpl:62
		if nextPage != "" && ix == len(workers)-1 {
//line views/workersPage.qtpl:62
			qw422016.N().S(`
        hx-trigger="revealed"
        hx-target="this"
        hx-swap="afterend"
        hx-get="`)
//line views/workersPage.qtpl:66
			qw422016.E().S(nextPage)
//line views/workersPage.qtpl:66
			qw422016.N().S(`"
        `)
//line views/workersPage.qtpl:67
		}
//line views/workersPage.qtpl:67
		qw422016.N().S(`
    >
        <td class="border-b"><a
            class="flex items-center px-4 h-10 text-primary-700 group-hover:underline"
            href="/workers/`)
//line views/workersPage.qtpl:71
		qw422016.E().S(worker.Id)
//line views/workersPage.qtpl:71
		qw422016.N().S(`"
            hx-target="main"
        >`)
//line views/workersPage.qtpl:73
		qw422016.E().S(worker.Name)
//line views/workersPage.qtpl:73
		qw422016.N().S(`</a></td>
        <td class="px-4 h-10 border-b">`)
//line views/workersPage.qtpl:74
		qw422016.N().D(int(worker.Major))
//line views/workersPage.qtpl:74
		qw422016.N().S(`</td>
        <td class="px-4 h-10 border-b">`)
//line views/workersPage.qtpl:75
		qw422016.N().D(int(worker.Revision))
//line views/workersPage.qtpl:75
		qw422016.N().S(`</td>
        <td class="px-4 h-10 border-b">`)
//line views/workersPage.qtpl:76
		qw422016.E().S(worker.Id)
//line views/workersPage.qtpl:76
		qw422016.N().S(`</td>
        <td class="px-4 h-10 border-b">`)
//line views/workersPage.qtpl:77
		qw422016.E().S(worker.Description)
//line views/workersPage.qtpl:77
		qw422016.N().S(`</td>
        <td class="px-4 h-10 border-b">Python</td>
    </tr>
    `)
//line views/workersPage.qtpl:80
	}
//line views/workersPage.qtpl:80
	qw422016.N().S(`
`)
//line views/workersPage.qtpl:81
}

//line views/workersPage.qtpl:81
func WriteRenderWorkerTableRows(qq422016 qtio422016.Writer, workers []api.UserWorker, nextPage string) {
//line views/workersPage.qtpl:81
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/workersPage.qtpl:81
	StreamRenderWorkerTableRows(qw422016, workers, nextPage)
//line views/workersPage.qtpl:81
	qt422016.ReleaseWriter(qw422016)
//line views/workersPage.qtpl:81
}

//line views/workersPage.qtpl:81
func RenderWorkerTableRows(workers []api.UserWorker, nextPage string) string {
//line views/workersPage.qtpl:81
	qb422016 := qt422016.AcquireByteBuffer()
//line views/workersPage.qtpl:81
	WriteRenderWorkerTableRows(qb422016, workers, nextPage)
//line views/workersPage.qtpl:81
	qs422016 := string(qb422016.B)
//line views/workersPage.qtpl:81
	qt422016.ReleaseByteBuffer(qb422016)
//line views/workersPage.qtpl:81
	return qs422016
//line views/workersPage.qtpl:81
}

//line views/workersPage.qtpl:84
type WorkerListPage struct {
	BasePage
	Workers []api.UserWorker
}
