// Code generated by qtc from "layout.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/layout.qtpl:1
package views

//line views/layout.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/layout.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/layout.qtpl:2
type NavItem struct {
	Label string
	URL   string
	Icon  string
}

var navItems = []NavItem{
	{Label: "Overview", URL: "/", Icon: "material-symbols:home-outline-rounded"},
	{Label: "Ingress", URL: "/ingress", Icon: "mdi:latest"},
	{Label: "Workers", URL: "/workers", Icon: "uil:box"},
	{Label: "Pipelines", URL: "/pipelines", Icon: "mdi:pipe"},
}

//line views/layout.qtpl:17
type Page interface {
//line views/layout.qtpl:17
	Title() string
//line views/layout.qtpl:17
	StreamTitle(qw422016 *qt422016.Writer)
//line views/layout.qtpl:17
	WriteTitle(qq422016 qtio422016.Writer)
//line views/layout.qtpl:17
	Header() string
//line views/layout.qtpl:17
	StreamHeader(qw422016 *qt422016.Writer)
//line views/layout.qtpl:17
	WriteHeader(qq422016 qtio422016.Writer)
//line views/layout.qtpl:17
	Body() string
//line views/layout.qtpl:17
	StreamBody(qw422016 *qt422016.Writer)
//line views/layout.qtpl:17
	WriteBody(qq422016 qtio422016.Writer)
//line views/layout.qtpl:17
	Footer() string
//line views/layout.qtpl:17
	StreamFooter(qw422016 *qt422016.Writer)
//line views/layout.qtpl:17
	WriteFooter(qq422016 qtio422016.Writer)
//line views/layout.qtpl:17
}

//line views/layout.qtpl:26
type BasePage struct {
}

//line views/layout.qtpl:29
func (p *BasePage) StreamTitle(qw422016 *qt422016.Writer) {
//line views/layout.qtpl:29
	qw422016.N().S(`This is a base title`)
//line views/layout.qtpl:29
}

//line views/layout.qtpl:29
func (p *BasePage) WriteTitle(qq422016 qtio422016.Writer) {
//line views/layout.qtpl:29
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:29
	p.StreamTitle(qw422016)
//line views/layout.qtpl:29
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:29
}

//line views/layout.qtpl:29
func (p *BasePage) Title() string {
//line views/layout.qtpl:29
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:29
	p.WriteTitle(qb422016)
//line views/layout.qtpl:29
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:29
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:29
	return qs422016
//line views/layout.qtpl:29
}

//line views/layout.qtpl:30
func (p *BasePage) StreamHeader(qw422016 *qt422016.Writer) {
//line views/layout.qtpl:30
}

//line views/layout.qtpl:30
func (p *BasePage) WriteHeader(qq422016 qtio422016.Writer) {
//line views/layout.qtpl:30
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:30
	p.StreamHeader(qw422016)
//line views/layout.qtpl:30
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:30
}

//line views/layout.qtpl:30
func (p *BasePage) Header() string {
//line views/layout.qtpl:30
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:30
	p.WriteHeader(qb422016)
//line views/layout.qtpl:30
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:30
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:30
	return qs422016
//line views/layout.qtpl:30
}

//line views/layout.qtpl:31
func (p *BasePage) StreamBody(qw422016 *qt422016.Writer) {
//line views/layout.qtpl:31
	qw422016.N().S(`Page has no body`)
//line views/layout.qtpl:31
}

//line views/layout.qtpl:31
func (p *BasePage) WriteBody(qq422016 qtio422016.Writer) {
//line views/layout.qtpl:31
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:31
	p.StreamBody(qw422016)
//line views/layout.qtpl:31
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:31
}

//line views/layout.qtpl:31
func (p *BasePage) Body() string {
//line views/layout.qtpl:31
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:31
	p.WriteBody(qb422016)
//line views/layout.qtpl:31
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:31
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:31
	return qs422016
//line views/layout.qtpl:31
}

//line views/layout.qtpl:32
func (p *BasePage) StreamFooter(qw422016 *qt422016.Writer) {
//line views/layout.qtpl:32
}

//line views/layout.qtpl:32
func (p *BasePage) WriteFooter(qq422016 qtio422016.Writer) {
//line views/layout.qtpl:32
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:32
	p.StreamFooter(qw422016)
//line views/layout.qtpl:32
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:32
}

//line views/layout.qtpl:32
func (p *BasePage) Footer() string {
//line views/layout.qtpl:32
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:32
	p.WriteFooter(qb422016)
//line views/layout.qtpl:32
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:32
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:32
	return qs422016
//line views/layout.qtpl:32
}

//line views/layout.qtpl:34
func StreamIndex(qw422016 *qt422016.Writer, page Page) {
//line views/layout.qtpl:34
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en" class="h-full bg-slate-50">

<head>
    <title>SensorBucket</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="`)
//line views/layout.qtpl:42
	qw422016.E().S(U("static/style.css"))
//line views/layout.qtpl:42
	qw422016.N().S(`" />
    `)
//line views/layout.qtpl:43
	streamdebugHeaders(qw422016)
//line views/layout.qtpl:43
	qw422016.N().S(`
    <!-- TODO: only load these on the required pages -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.Default.css"/>
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.5.3/dist/MarkerCluster.css"/>
    <script type="text/javascript" src="https://unpkg.com/leaflet.markercluster@1.5.3/dist/leaflet.markercluster.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/uplot@1.6.25/dist/uPlot.min.css" />
    <script type="text/javascript" src="https://unpkg.com/uplot@1.6.25/dist/uPlot.iife.min.js"></script>
    <script type="text/javascript" src="`)
//line views/layout.qtpl:54
	qw422016.E().S(U("static/uplot.htmx.js"))
//line views/layout.qtpl:54
	qw422016.N().S(`"></script>
    <script type="text/javascript" src="`)
//line views/layout.qtpl:55
	qw422016.E().S(U("static/leaflet.htmx.js"))
//line views/layout.qtpl:55
	qw422016.N().S(`"></script>
    <script src="https://SortableJS.github.io/Sortable/Sortable.js"></script>
    <script type="text/javascript">
        window.addEventListener("DOMContentLoaded", function(){
            document.body.addEventListener("showSnackbar", function(evt) {
                showSnackbar(evt.detail.message, evt.detail.type);
            });
        });
     
        const snackbarSuccess = 1;
        const snackbarError = 2;
        
        let currentHideSnackbarTimer = null;
        function showSnackbar(message, type) {
            // If called again before disapearing, immediately hide
            hideSnackbar();

            const snackbar = document.getElementById('snackbar');
            const snackbarMessage = document.getElementById('snackbarMessage');

            snackbarMessage.innerText = message;

            snackbar.classList.add('translate-y-0');
            snackbar.classList.add('opacity-100');
            snackbar.classList.remove('pointer-events-none');

            const successIcon = document.getElementById('successIcon');
            const errorIcon = document.getElementById('errorIcon');

            if (!successIcon.classList.contains('hidden')) {
                successIcon.classList.add('hidden');
            }

            if (!errorIcon.classList.contains('hidden')) {
                errorIcon.classList.add('hidden');
            }

            if (type == snackbarSuccess) {
                const successIcon = document.getElementById('successIcon');
                successIcon.classList.remove('hidden');
            } else if (type == snackbarError) {
                const errorIcon = document.getElementById('errorIcon');
                errorIcon.classList.remove('hidden');
            }

            currentHideSnackbarTimer = setTimeout(() => {
              hideSnackbar();
            }, 3000);
        }

        function hideSnackbar() {
            if (currentHideSnackbarTimer != null) {
                clearTimeout(currentHideSnackbarTimer);
                currentHideSnackbarTimer = null;
            }
            const snackbar = document.getElementById('snackbar');
            snackbar.classList.remove('translate-y-0');
            snackbar.classList.remove('opacity-100');
            snackbar.classList.add('pointer-events-none');
        }
    </script>
    `)
//line views/layout.qtpl:116
	page.StreamHeader(qw422016)
//line views/layout.qtpl:116
	qw422016.N().S(`
</head>

<body class="min-h-full" hx-boost="true">
    <div id="snackbar" class="fixed bottom-3 right-3 w-96 h-24 select-none transition ease-in duration-100 drop-shadow-2xl -translate-y-5 opacity-0 pointer-events-none"> 
        <div class="flex justify-between w-full h-full p-4 mb-4 text-gray-500 bg-secondary-600" role="alert">
            <div class="flex items-center justify-start w-full">
                <div class="w-1/6 h-full border-solid border border-white">
                    <iconify-icon id="successIcon" icon="ph:check-bold" width="100%" height="100%" class="text-green-500 hidden"></iconify-icon>
                    <iconify-icon id="errorIcon" icon="tdesign:error" width="100%" height="100%" class="text-rose-800 hidden"></iconify-icon>
                </div>
                <span id="snackbarMessage" class="ml-3 text-lg font-normal text-white">hello there</span>
            </div>
            <div class="cursor-pointer" onclick="hideSnackbar()">
                <iconify-icon icon="ooui:close" class="text-white"></iconify-icon>
            </div>
        </div>
    </div>
    <sidebar class="w-screen lg:w-sidebar fixed lg:h-screen top-0 left-0 flex flex-col bg-secondary-600 z-[5000]">
        <header class="h-12 lg:h-header flex justify-between lg:flex-col lg:justify-end">
            <a hx-target="main" class="h-full block p-3 lg:p-0 lg:pl-8 lg:pr-12 lg:h-auto" href="`)
//line views/layout.qtpl:136
	qw422016.E().S(U("/overview"))
//line views/layout.qtpl:136
	qw422016.N().S(`"><img src="`)
//line views/layout.qtpl:136
	qw422016.E().S(U("static/logo-white.png"))
//line views/layout.qtpl:136
	qw422016.N().S(`" alt="SensorBucket" class="h-full" /></a>
            <button 
                class="h-8 w-8 self-center lg:hidden"
                _="on click toggle .h-auto on <nav/>
                    then toggle .hidden on <nav/>
                    then toggle .rotate-180 on #toggle-sidebar-icon"
            >
                <iconify-icon id="toggle-sidebar-icon" icon="ic:round-keyboard-arrow-down" width="24" class="text-white transition duration-150"></iconify-icon>
            </button>
        </header>
        <nav class="mt-4 px-8 pb-4 hidden lg:block">
            <ul hx-target="main">
                <li class="pb-2 text-xs font-bold text-secondary-300 uppercase">Navigation</li>
                `)
//line views/layout.qtpl:149
	for _, item := range navItems {
//line views/layout.qtpl:149
		qw422016.N().S(`
                <li>
                    <a href="`)
//line views/layout.qtpl:151
		qw422016.E().S(U(item.URL))
//line views/layout.qtpl:151
		qw422016.N().S(`"
                        class="flex items-center py-1.5 text-sm text-secondary-300 hover:text-white transition-colors duration-150">
                        <iconify-icon icon="`)
//line views/layout.qtpl:153
		qw422016.E().S(item.Icon)
//line views/layout.qtpl:153
		qw422016.N().S(`" width="24" class="pr-4 w-8"></iconify-icon>
                        <span>
                            `)
//line views/layout.qtpl:155
		qw422016.E().S(item.Label)
//line views/layout.qtpl:155
		qw422016.N().S(`
                        </span>
                    </a>
                </li>
                `)
//line views/layout.qtpl:159
	}
//line views/layout.qtpl:159
	qw422016.N().S(`
            </ul>
        </nav>
    </sidebar>
    <section class="flex-1 mt-12 lg:mt-0 lg:ml-sidebar" id="main-wrapper">
        <header class="h-8 bg-white border-b" id="mustache">
            
        </header>
        <main class="p-4 pt-0 mt-4" id="main">
            `)
//line views/layout.qtpl:168
	page.StreamBody(qw422016)
//line views/layout.qtpl:168
	qw422016.N().S(`
        </main>
    </section>

    `)
//line views/layout.qtpl:172
	page.StreamFooter(qw422016)
//line views/layout.qtpl:172
	qw422016.N().S(`
</body>

</html>
`)
//line views/layout.qtpl:176
}

//line views/layout.qtpl:176
func WriteIndex(qq422016 qtio422016.Writer, page Page) {
//line views/layout.qtpl:176
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:176
	StreamIndex(qw422016, page)
//line views/layout.qtpl:176
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:176
}

//line views/layout.qtpl:176
func Index(page Page) string {
//line views/layout.qtpl:176
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:176
	WriteIndex(qb422016, page)
//line views/layout.qtpl:176
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:176
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:176
	return qs422016
//line views/layout.qtpl:176
}

// These are for debugging only. In production the tailwind and icons should be bundled with the dashboard

//line views/layout.qtpl:180
func streamdebugHeaders(qw422016 *qt422016.Writer) {
//line views/layout.qtpl:180
	qw422016.N().S(`
<script type="text/javascript" src="https://unpkg.com/htmx.org@1.9.4"></script>
<script type="text/javascript" src="https://unpkg.com/htmx.org@1.9.4/dist/ext/ws.js"></script>
<script type="text/javascript" src="https://unpkg.com/hyperscript.org@0.9.11"></script>
<script type="text/javascript" src="https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js"></script>
<!--<script type="text/javascript" src="https://livejs.com/live.js"></script>-->
`)
//line views/layout.qtpl:186
}

//line views/layout.qtpl:186
func writedebugHeaders(qq422016 qtio422016.Writer) {
//line views/layout.qtpl:186
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/layout.qtpl:186
	streamdebugHeaders(qw422016)
//line views/layout.qtpl:186
	qt422016.ReleaseWriter(qw422016)
//line views/layout.qtpl:186
}

//line views/layout.qtpl:186
func debugHeaders() string {
//line views/layout.qtpl:186
	qb422016 := qt422016.AcquireByteBuffer()
//line views/layout.qtpl:186
	writedebugHeaders(qb422016)
//line views/layout.qtpl:186
	qs422016 := string(qb422016.B)
//line views/layout.qtpl:186
	qt422016.ReleaseByteBuffer(qb422016)
//line views/layout.qtpl:186
	return qs422016
//line views/layout.qtpl:186
}
