// Code generated by qtc from "tracesList.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/tracesList.qtpl:1
package views

//line views/tracesList.qtpl:1
import "time"

//line views/tracesList.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/tracesList.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/tracesList.qtpl:3
func StreamRenderTracesList(qw422016 *qt422016.Writer, traces []Trace) {
//line views/tracesList.qtpl:3
	qw422016.N().S(`
<article class="grid grid-cols-[max-content,1fr,max-content] items-center gap-4 text-sm border-b bg-white px-4 py-2">
    `)
//line views/tracesList.qtpl:5
	if len(traces) == 0 {
//line views/tracesList.qtpl:5
		qw422016.N().S(`
      <span></span>
      <span class="text-slate-500 text-center">No traces found</span>
      <span></span>
    `)
//line views/tracesList.qtpl:9
	}
//line views/tracesList.qtpl:9
	qw422016.N().S(`
    `)
//line views/tracesList.qtpl:10
	for _, trace := range traces {
//line views/tracesList.qtpl:10
		qw422016.N().S(`
          <span>`)
//line views/tracesList.qtpl:11
		qw422016.E().S(trace.TimeAgo)
//line views/tracesList.qtpl:11
		qw422016.N().S(`</span>
          <section class="flex flex-col">
              <span>`)
//line views/tracesList.qtpl:13
		qw422016.E().S(trace.ID)
//line views/tracesList.qtpl:13
		qw422016.N().S(`</span>
              <div class="text-slate-500 text-xs">
                  <span>`)
//line views/tracesList.qtpl:15
		qw422016.E().S(trace.StartTime.Format("15:04:05 2006-01-02"))
//line views/tracesList.qtpl:15
		qw422016.N().S(`</span>
                  `)
//line views/tracesList.qtpl:16
		if trace.DeviceID != 0 {
//line views/tracesList.qtpl:16
			qw422016.N().S(`
                      <a hx-target="main" href="`)
//line views/tracesList.qtpl:17
			qw422016.E().S(U("/overview/devices/%d", trace.DeviceID))
//line views/tracesList.qtpl:17
			qw422016.N().S(`" class="ml-3 text-sky-600 hover:underline">`)
//line views/tracesList.qtpl:17
			qw422016.E().S(trace.DeviceCode)
//line views/tracesList.qtpl:17
			qw422016.N().S(`</a>
                  `)
//line views/tracesList.qtpl:18
		}
//line views/tracesList.qtpl:18
		qw422016.N().S(`
              </div>
          </section>
          <section class="relative flex items-center">
              <ul class="flex items-center gap-4 z-10">
                  `)
//line views/tracesList.qtpl:23
		for _, step := range trace.Steps {
//line views/tracesList.qtpl:23
			qw422016.N().S(`
                      <li class="
                          flex relative items-center rounded-full py-1 px-2 text-xs border
                          bg-white group
                          `)
//line views/tracesList.qtpl:27
			switch step.Status {
//line views/tracesList.qtpl:28
			case StatusCompleted:
//line views/tracesList.qtpl:28
				qw422016.N().S(`
                           border-emerald-500
                          `)
//line views/tracesList.qtpl:30
			case StatusPending:
//line views/tracesList.qtpl:30
				qw422016.N().S(`
                           border-orange-500
                          `)
//line views/tracesList.qtpl:32
			case StatusError:
//line views/tracesList.qtpl:32
				qw422016.N().S(`
                           border-rose-500
                          `)
//line views/tracesList.qtpl:34
			default:
//line views/tracesList.qtpl:34
				qw422016.N().S(`
                          `)
//line views/tracesList.qtpl:35
			}
//line views/tracesList.qtpl:35
			qw422016.N().S(`
                      ">
                          `)
//line views/tracesList.qtpl:37
			qw422016.E().S(step.Name)
//line views/tracesList.qtpl:37
			qw422016.N().S(`
                          `)
//line views/tracesList.qtpl:38
			switch step.Status {
//line views/tracesList.qtpl:39
			case StatusCompleted:
//line views/tracesList.qtpl:39
				qw422016.N().S(`
                          <iconify-icon class="w-3 pl-1 text-emerald-800" icon="fluent:checkmark-12-filled"></iconify-icon>
                          `)
//line views/tracesList.qtpl:41
			case StatusPending:
//line views/tracesList.qtpl:41
				qw422016.N().S(`
                          <iconify-icon class="w-3 pl-1 text-orange-800" icon="carbon:in-progress"></iconify-icon>
                          `)
//line views/tracesList.qtpl:43
			case StatusError:
//line views/tracesList.qtpl:43
				qw422016.N().S(`
                          <iconify-icon class="w-3 pl-1 text-rose-800" icon="material-symbols:error"></iconify-icon>
                          `)
//line views/tracesList.qtpl:45
			default:
//line views/tracesList.qtpl:45
				qw422016.N().S(`
                          <iconify-icon class="w-3 pl-1 text-slate-800" icon="material-symbols:question-mark"></iconify-icon>
                          `)
//line views/tracesList.qtpl:47
			}
//line views/tracesList.qtpl:47
			qw422016.N().S(`
                          `)
//line views/tracesList.qtpl:48
			if step.Label != "" {
//line views/tracesList.qtpl:48
				qw422016.N().S(`
                          <div class="
                              hidden hover:block group-hover:block absolute text-white bg-gray-800 bottom-full mb-2 left-1/2 -translate-x-1/2 px-3 rounded py-1
                              after:content-['_'] after:absolute after:top-full after:-translate-y-[0.25rem] after:left-1/2 after:-translate-x-1/2 after:bg-gray-800 after:w-2 after:h-2 after:rotate-45
                          ">
                              `)
//line views/tracesList.qtpl:53
				qw422016.E().S(step.Label)
//line views/tracesList.qtpl:53
				qw422016.N().S(`
                          </div>
                          `)
//line views/tracesList.qtpl:55
			}
//line views/tracesList.qtpl:55
			qw422016.N().S(`
                      </li>
                  `)
//line views/tracesList.qtpl:57
		}
//line views/tracesList.qtpl:57
		qw422016.N().S(`
              </ul>
              <div class="absolute border-b-2 left-0 right-0 top-1/2 -translate-y-1/2"></div>
          </section>
    `)
//line views/tracesList.qtpl:61
	}
//line views/tracesList.qtpl:61
	qw422016.N().S(`
</article>
`)
//line views/tracesList.qtpl:63
}

//line views/tracesList.qtpl:63
func WriteRenderTracesList(qq422016 qtio422016.Writer, traces []Trace) {
//line views/tracesList.qtpl:63
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/tracesList.qtpl:63
	StreamRenderTracesList(qw422016, traces)
//line views/tracesList.qtpl:63
	qt422016.ReleaseWriter(qw422016)
//line views/tracesList.qtpl:63
}

//line views/tracesList.qtpl:63
func RenderTracesList(traces []Trace) string {
//line views/tracesList.qtpl:63
	qb422016 := qt422016.AcquireByteBuffer()
//line views/tracesList.qtpl:63
	WriteRenderTracesList(qb422016, traces)
//line views/tracesList.qtpl:63
	qs422016 := string(qb422016.B)
//line views/tracesList.qtpl:63
	qt422016.ReleaseByteBuffer(qb422016)
//line views/tracesList.qtpl:63
	return qs422016
//line views/tracesList.qtpl:63
}

//line views/tracesList.qtpl:66
type Trace struct {
	ID           string
	StartTime    time.Time
	TimeAgo      string
	PipelineID   string
	PipelineName string
	DeviceID     int64
	DeviceCode   string
	Steps        []Step
}

type StepStatus uint

const (
	StatusUnknown StepStatus = iota
	StatusCompleted
	StatusPending
	StatusError
)

type Step struct {
	Name   string
	Status StepStatus
	Label  string
}
