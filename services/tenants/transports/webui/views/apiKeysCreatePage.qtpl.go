// Code generated by qtc from "apiKeysCreatePage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line transports/webui/views/apiKeysCreatePage.qtpl:1
package views

//line transports/webui/views/apiKeysCreatePage.qtpl:1
import "strings"

//line transports/webui/views/apiKeysCreatePage.qtpl:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line transports/webui/views/apiKeysCreatePage.qtpl:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line transports/webui/views/apiKeysCreatePage.qtpl:2
func (p *APIKeysCreatePage) StreamBody(qw422016 *qt422016.Writer) {
//line transports/webui/views/apiKeysCreatePage.qtpl:2
	qw422016.N().S(`
<div class="w-full bg-white border rounded-md">
    <header class="w-full flex items-center justify-between border-b py-2 px-4 text-sm text-slate-700">
        <section>
            Create API Key
        </section>
    </header>
    <form id="apiKeyCreateForm" class="p-4 gap-4 grid lg:grid-cols-1" hx-trigger="submit" hx-post="`)
//line transports/webui/views/apiKeysCreatePage.qtpl:9
	qw422016.E().S(U("/api-keys/create"))
//line transports/webui/views/apiKeysCreatePage.qtpl:9
	qw422016.N().S(`"
        hx-target="#mainContent" hx-swap="innerHTML">
        <fieldset>
            <label for="api-key-tenant" class="ml-1 -mb-1 block"><small
                    class="text-xs text-slate-500">Tenant</small></label>
            <select name="api-key-tenant" id="api-key-tenant"
                class="block w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600">
                `)
//line transports/webui/views/apiKeysCreatePage.qtpl:16
	StreamRenderTenantSelect(qw422016, p.Tenants)
//line transports/webui/views/apiKeysCreatePage.qtpl:16
	qw422016.N().S(`
                <select />
        </fieldset>
        <fieldset>
            <label for="api-key-name" class="ml-1 -mb-1 block"><small
                    class="text-xs text-slate-500">Name</small></label>
            <input type="text" name="api-key-name" id="api-key-name"
                class="block w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600" />
        </fieldset>
        <fieldset>
            <label for="api-key-expiry" class="ml-1 -mb-1 block"><small class="text-xs text-slate-500">Expires</small>
                <input type="checkbox" _="on click toggle .hidden on #api-key-expiry"
                    class="h-4 w-4 ml-2 text-secondary-500 cursor-pointer">
            </label>
            <input _="init get formattedDateTomorrow() then set @min to it on me" type="date" min=""
                name="api-key-expiry" id="api-key-expiry"
                class="w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600 hidden" />
        </fieldset>
        <fieldset>
            <label></label>
            `)
//line transports/webui/views/apiKeysCreatePage.qtpl:36
	StreamRenderPermissionTables(qw422016, p.Permissions)
//line transports/webui/views/apiKeysCreatePage.qtpl:36
	qw422016.N().S(`
        </fieldset>
        <div class="col-span-full">
            <button id="api-key-create-button"
                class="disabled:cursor-not-allowed disabled:opacity-50 text-sm bg-emerald-400 hover:bg-emerald-500 text-white border border-emerald-500 rounded px-2 py-1">
                Generate new API key
            </button>
        </div>
    </form>
    <script type="text/javascript">
        function formattedDateTomorrow() {
            var currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + 1);
            return currentDate.toISOString().split("T")[0];
        }
    </script>
</div>
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
}

//line transports/webui/views/apiKeysCreatePage.qtpl:53
func (p *APIKeysCreatePage) WriteBody(qq422016 qtio422016.Writer) {
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	qw422016 := qt422016.AcquireWriter(qq422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	p.StreamBody(qw422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	qt422016.ReleaseWriter(qw422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
}

//line transports/webui/views/apiKeysCreatePage.qtpl:53
func (p *APIKeysCreatePage) Body() string {
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	qb422016 := qt422016.AcquireByteBuffer()
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	p.WriteBody(qb422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	qs422016 := string(qb422016.B)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	qt422016.ReleaseByteBuffer(qb422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:53
	return qs422016
//line transports/webui/views/apiKeysCreatePage.qtpl:53
}

//line transports/webui/views/apiKeysCreatePage.qtpl:55
func StreamRenderTenantSelect(qw422016 *qt422016.Writer, tenants []TenantInfo) {
//line transports/webui/views/apiKeysCreatePage.qtpl:55
	qw422016.N().S(`
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:56
	for _, tenant := range tenants {
//line transports/webui/views/apiKeysCreatePage.qtpl:56
		qw422016.N().S(`
<option value="`)
//line transports/webui/views/apiKeysCreatePage.qtpl:57
		qw422016.N().D(tenant.ID)
//line transports/webui/views/apiKeysCreatePage.qtpl:57
		qw422016.N().S(`">`)
//line transports/webui/views/apiKeysCreatePage.qtpl:57
		qw422016.E().S(tenant.Name)
//line transports/webui/views/apiKeysCreatePage.qtpl:57
		qw422016.N().S(`</option>
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:58
	}
//line transports/webui/views/apiKeysCreatePage.qtpl:58
	qw422016.N().S(`
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
}

//line transports/webui/views/apiKeysCreatePage.qtpl:59
func WriteRenderTenantSelect(qq422016 qtio422016.Writer, tenants []TenantInfo) {
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	qw422016 := qt422016.AcquireWriter(qq422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	StreamRenderTenantSelect(qw422016, tenants)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	qt422016.ReleaseWriter(qw422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
}

//line transports/webui/views/apiKeysCreatePage.qtpl:59
func RenderTenantSelect(tenants []TenantInfo) string {
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	qb422016 := qt422016.AcquireByteBuffer()
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	WriteRenderTenantSelect(qb422016, tenants)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	qs422016 := string(qb422016.B)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	qt422016.ReleaseByteBuffer(qb422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:59
	return qs422016
//line transports/webui/views/apiKeysCreatePage.qtpl:59
}

//line transports/webui/views/apiKeysCreatePage.qtpl:61
func StreamRenderPermissionTables(qw422016 *qt422016.Writer, permissions map[string][]APIKeysPermission) {
//line transports/webui/views/apiKeysCreatePage.qtpl:61
	qw422016.N().S(`
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:62
	for category, permissions := range permissions {
//line transports/webui/views/apiKeysCreatePage.qtpl:62
		qw422016.N().S(`
<table class="min-w-full bg-white border border-gray-300 mb-2">
    <thead>
        <tr class="bg-secondary-400 text-secondary-100">
            <th class="py-2 px-4" colspan="2">
                <span class="ml-2 float-left">`)
//line transports/webui/views/apiKeysCreatePage.qtpl:67
		qw422016.E().S(category)
//line transports/webui/views/apiKeysCreatePage.qtpl:67
		qw422016.N().S(`</span>
            </th>
            <th class="py-2 px-4">
                <input type="checkbox" _="on click set .checkbox-`)
//line transports/webui/views/apiKeysCreatePage.qtpl:70
		qw422016.E().S(htmlFriendlyName(category))
//line transports/webui/views/apiKeysCreatePage.qtpl:70
		qw422016.N().S(`.checked to my.checked"
                    class="h-4 w-4 text-secondary-500 cursor-pointer float-right">
            </th>
        </tr>
    </thead>
    <tbody>
        `)
//line transports/webui/views/apiKeysCreatePage.qtpl:76
		for _, permission := range permissions {
//line transports/webui/views/apiKeysCreatePage.qtpl:76
			qw422016.N().S(`
        <tr>
            <td class="py-2 px-4 w-1/6">
                `)
//line transports/webui/views/apiKeysCreatePage.qtpl:79
			qw422016.E().S(permission.Name)
//line transports/webui/views/apiKeysCreatePage.qtpl:79
			qw422016.N().S(`
            </td>
            <td class="py-2 px-4 w-4/6">
                `)
//line transports/webui/views/apiKeysCreatePage.qtpl:82
			qw422016.E().S(permission.Description)
//line transports/webui/views/apiKeysCreatePage.qtpl:82
			qw422016.N().S(`
            </td>
            <td class="py-2 px-4 w-1/6">
                <input type="checkbox" name="api-key-permissions" value="`)
//line transports/webui/views/apiKeysCreatePage.qtpl:85
			qw422016.E().S(permission.Name)
//line transports/webui/views/apiKeysCreatePage.qtpl:85
			qw422016.N().S(`"
                    class="h-4 w-4 text-secondary-500 cursor-pointer float-right checkbox-`)
//line transports/webui/views/apiKeysCreatePage.qtpl:86
			qw422016.E().S(htmlFriendlyName(category))
//line transports/webui/views/apiKeysCreatePage.qtpl:86
			qw422016.N().S(`">
            </td>
        </tr>
        `)
//line transports/webui/views/apiKeysCreatePage.qtpl:89
		}
//line transports/webui/views/apiKeysCreatePage.qtpl:89
		qw422016.N().S(`
    </tbody>
</table>
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:92
	}
//line transports/webui/views/apiKeysCreatePage.qtpl:92
	qw422016.N().S(`
`)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
}

//line transports/webui/views/apiKeysCreatePage.qtpl:93
func WriteRenderPermissionTables(qq422016 qtio422016.Writer, permissions map[string][]APIKeysPermission) {
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	qw422016 := qt422016.AcquireWriter(qq422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	StreamRenderPermissionTables(qw422016, permissions)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	qt422016.ReleaseWriter(qw422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
}

//line transports/webui/views/apiKeysCreatePage.qtpl:93
func RenderPermissionTables(permissions map[string][]APIKeysPermission) string {
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	qb422016 := qt422016.AcquireByteBuffer()
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	WriteRenderPermissionTables(qb422016, permissions)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	qs422016 := string(qb422016.B)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	qt422016.ReleaseByteBuffer(qb422016)
//line transports/webui/views/apiKeysCreatePage.qtpl:93
	return qs422016
//line transports/webui/views/apiKeysCreatePage.qtpl:93
}

//line transports/webui/views/apiKeysCreatePage.qtpl:96
type APIKeysCreatePage struct {
	Base
	Tenants     []TenantInfo
	Permissions map[string][]APIKeysPermission
}

type APIKeysPermission struct {
	Name        string
	Description string
}

func htmlFriendlyName(src string) string {
	return strings.ReplaceAll(src, " ", "")
}
