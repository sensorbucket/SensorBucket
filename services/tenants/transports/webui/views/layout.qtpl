{% import layout_utils "sensorbucket.nl/sensorbucket/internal/layout-utils" %}

{% interface Page {
    Body()
} %}

{% func startHTML() %}
<!DOCTYPE html>
<html lang="en" class="bg-[#f8fafc]">
    <head>
        <title></title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="{%s U("/static/style.css") %}" />
        <script type="text/javascript" src="https://unpkg.com/htmx.org@1.9.4"></script>
        <script type="text/javascript" src="https://unpkg.com/hyperscript.org@0.9.11"></script>
        <script type="text/javascript" src="https://code.iconify.design/iconify-icon/1.0.8/iconify-icon.min.js"></script>
    </head>
    <body>
{% endfunc %}
{% func stopHTML() %}
    </body>
</html>
{% endfunc %}

{% func Layout(p Page) %}
{%= startHTML() %}
    <div class="mt-12 mx-auto w-full md:max-w-[420px] bg-white rounded-md overflow-hidden">
        <header class="bg-secondary-500 h-14 py-3">
            <img src="{%s U("/static/logo-white.png") %}" alt="SensorBucket Logo" class="h-full mx-auto" />
        </header>
        <main class="px-6 mb-4 space-y-2">
        {%= p.Body() %}
        </main>
    </div>
{%= stopHTML() %}
{% endfunc %}

{% func WideLayout(p Page) %}
{%= startHTML() %}
    <div class="mt-12 mx-auto w-full md:max-w-screen-xl bg-white rounded-md overflow-hidden">
        <header class="bg-secondary-500 h-14 py-3">
            <img src="{%s U("/static/logo-white.png") %}" alt="SensorBucket Logo" class="h-full mx-auto" />
        </header>
        <main class="px-6 mb-4 space-y-2">
            <div id="settingsPage" class="grid grid-cols-[1fr_4fr]">
                {%= renderSidebar() %}
                {%= p.Body() %}
            </div>
        </main>
    </div>
{%= stopHTML() %}
{% endfunc %}

{% func renderSidebar() %}
    <section class="flex flex-col border-r">
        <h1 class="p-6 text-lg text-center">Settings</h1>
        <hr class="px-6 py-1">
        <ul class="flex flex-col">
            <li>
                <a
                    class="block text-sm py-3 px-6 transition-colors duration-150 hover:bg-gray-50"
                    href="{%s U("/auth/settings") %}">Profile Settings</a>
            </li>
            <li>
                <a
                    class="block text-sm py-3 px-6 transition-colors duration-150 hover:bg-gray-50"
                    href="{%s U("/api-keys") %}">API Keys</a>
            </li>
        </ul>
    </section>
{% endfunc %}

{% func RenderFlashMessages(flashMessages layout_utils.FlashMessages) %}
<div id="flash-messages" >
{% for _, flashMessage := range flashMessages %}
{%= RenderFlashMessage(flashMessage) %}
{% endfor %}
</div>
{% endfunc %}

{% func RenderFlashMessage(msg layout_utils.FlashMessage) %}
{% code
    color := ""
    icon := ""

    switch msg.MessageType {
        case layout_utils.Success:
            color = "green"
            icon = "mdi:success-circle-outline"
        case layout_utils.Warning:
            color = "orange"
            icon = "carbon:warning"
        case layout_utils.Error:
            color = "red"
            icon = "icon-park-outline:error"
    }
%}
<div class="p-3">
    <!-- Required to include below tailwind classes in styles -->
    <div class="hidden">
        <div class="text-red-600  bg-red-400 border-red-500"></div>
        <div class="border-red-400 bg-red-500"></div>
        <div class="bg-red-100"></div>

        <div class="text-orange-600  bg-orange-400 border-orange-500"></div>
        <div class="border-orange-400 bg-orange-500"></div>
        <div class="bg-orange-100"></div>

        <div class="text-green-600  bg-green-400 border-green-500"></div>
        <div class="border-green-400 bg-green-500"></div>
        <div class="bg-green-100"></div>
    </div>
    <div class="bg-{%s color %}-100 border-l-4 border-{%s color %}-400 text-{%s color %}-600 p-4" role="alert">
        <div class="flex w-full">
            <div class="py-2">
                <iconify-icon icon="{%s icon %}" width="24"
                class="px-4 float-right text-{%s color %}-600"></iconify-icon>
            </div>
            <div class="w-full">
                <p class="text-sm font-bold">{%s msg.Title %}</p>
                <br />
                <div class="flex justify-start">
                    <p id="dialogue-value" class="text-sm w-full truncate">
                        {%s msg.Description %}
                    </p>
                    {% if msg.CopyButton %}
                    <button onclick="copyValueToClipboard()"
                        class="text-sm ml-1 bg-{%s color %}-400 hover:bg-{%s color %}-500 text-white border border-{%s color %}-500 rounded px-2 py-1">
                        Copy
                    </button>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function copyValueToClipboard() {
            const text = document.getElementById("dialogue-value").innerText;
            navigator.clipboard.writeText(text);
        }
    </script>

</div>
{% endfunc %}

{% code
type Base struct {
    FlashMessages layout_utils.FlashMessages
}
%}
