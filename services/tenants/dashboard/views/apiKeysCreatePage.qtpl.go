// Code generated by qtc from "apiKeysCreatePage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/apiKeysCreatePage.qtpl:1
package views

//line views/apiKeysCreatePage.qtpl:1
import "sensorbucket.nl/sensorbucket/pkg/layout"

//line views/apiKeysCreatePage.qtpl:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/apiKeysCreatePage.qtpl:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/apiKeysCreatePage.qtpl:2
func (p *ApiKeysCreatePage) StreamBody(qw422016 *qt422016.Writer) {
//line views/apiKeysCreatePage.qtpl:2
	qw422016.N().S(`
<div class="w-full xl:w-2/3 mx-auto bg-white border rounded-md">
    <header class="w-full flex items-center justify-between border-b py-2 px-4 text-sm text-slate-700">
        <section>
            Create API Key
        </section>
    </header>
    <div _="on htmx:afterSwap remove .hidden from #api-key-create-result">
        <form _="on htmx:beforeRequest 
            add @disabled to #api-key-create-button wait 5s then remove @disabled from #api-key-create-button"
            id="apiKeyCreateForm" class="p-4 gap-4 grid lg:grid-cols-1" hx-trigger="submit"
            hx-target="#api-key-result-value" hx-swap="innerHTML" hx-post="/api-keys/create">
            <fieldset>
                <label for="api-key-tenant" class="ml-1 -mb-1 block"><small
                        class="text-xs text-slate-500">Tenant</small></label>
                <select name="api-key-tenant" id="api-key-tenant"
                    class="block w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600">
                    `)
//line views/apiKeysCreatePage.qtpl:19
	StreamRenderTenantSelect(qw422016, p.Tenants)
//line views/apiKeysCreatePage.qtpl:19
	qw422016.N().S(`
                    <select />
            </fieldset>
            <fieldset>
                <label for="api-key-name" class="ml-1 -mb-1 block"><small
                        class="text-xs text-slate-500">Name</small></label>
                <input type="text" name="api-key-name" id="api-key-name"
                    class="block w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600" />
            </fieldset>
            <fieldset>
                <label for="api-key-expiry" class="ml-1 -mb-1 block"><small
                        class="text-xs text-slate-500">Expiry</small></label>
                <input _="init get formattedDateTomorrow() then set @min to it on me" type="date" min=""
                    name="api-key-expiry" id="api-key-expiry"
                    class="block w-full px-2 py-1 border rounded-md bg-white placeholder:text-slate-600" />
            </fieldset>
            <fieldset>
                <label></label>
                `)
//line views/apiKeysCreatePage.qtpl:37
	StreamRenderPermissionTables(qw422016, nil)
//line views/apiKeysCreatePage.qtpl:37
	qw422016.N().S(`
            </fieldset>
            <div class="col-span-full">
                <button id="api-key-create-button"
                    class="disabled:cursor-not-allowed disabled:opacity-50 text-sm bg-emerald-400 hover:bg-emerald-500 text-white border border-emerald-500 rounded px-2 py-1">
                    Generate new API key
                </button>
            </div>
        </form>
        <div id="api-key-create-result" class="p-3 hidden">
            <div class="bg-orange-100 border-l-4 border-orange-400 text-orange-600 p-4" role="alert">
                <div class="flex w-full">
                    <div class="py-1"><svg class="fill-current h-6 w-6 text-orange-600 mr-4"
                            xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                            <path
                                d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z" />
                        </svg></div>
                    <div class="w-full">
                        <p class="text-sm font-bold">This is your API Key, please copy your API Key immediately as it
                            will not be shown again</p>
                        <br />
                        <div class="flex justify-start">
                            <p id="api-key-result-value" class="text-sm w-full truncate"></p>
                            <button onclick="copyApiKeyToClipboard()"
                                class="text-sm ml-1 bg-orange-400 hover:bg-orange-500 text-white border border-orange-500 rounded px-2 py-1">
                                Copy
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function formattedDateTomorrow() {
            var currentDate = new Date();
            currentDate.setDate(currentDate.getDate() + 1);
            return currentDate.toISOString().split("T")[0];
        }

        function copyApiKeyToClipboard() {
            const text = document.getElementById("api-key-result-value").innerText;
            navigator.clipboard.writeText(text);
            showSnackbar("API key copied to clipboard!", snackbarSuccess);
        }
    </script>
</div>
`)
//line views/apiKeysCreatePage.qtpl:84
}

//line views/apiKeysCreatePage.qtpl:84
func (p *ApiKeysCreatePage) WriteBody(qq422016 qtio422016.Writer) {
//line views/apiKeysCreatePage.qtpl:84
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/apiKeysCreatePage.qtpl:84
	p.StreamBody(qw422016)
//line views/apiKeysCreatePage.qtpl:84
	qt422016.ReleaseWriter(qw422016)
//line views/apiKeysCreatePage.qtpl:84
}

//line views/apiKeysCreatePage.qtpl:84
func (p *ApiKeysCreatePage) Body() string {
//line views/apiKeysCreatePage.qtpl:84
	qb422016 := qt422016.AcquireByteBuffer()
//line views/apiKeysCreatePage.qtpl:84
	p.WriteBody(qb422016)
//line views/apiKeysCreatePage.qtpl:84
	qs422016 := string(qb422016.B)
//line views/apiKeysCreatePage.qtpl:84
	qt422016.ReleaseByteBuffer(qb422016)
//line views/apiKeysCreatePage.qtpl:84
	return qs422016
//line views/apiKeysCreatePage.qtpl:84
}

//line views/apiKeysCreatePage.qtpl:86
func StreamRenderTenantSelect(qw422016 *qt422016.Writer, tenants []TenantInfo) {
//line views/apiKeysCreatePage.qtpl:86
	qw422016.N().S(`
`)
//line views/apiKeysCreatePage.qtpl:87
	for _, tenant := range tenants {
//line views/apiKeysCreatePage.qtpl:87
		qw422016.N().S(`
<option value="`)
//line views/apiKeysCreatePage.qtpl:88
		qw422016.N().D(tenant.ID)
//line views/apiKeysCreatePage.qtpl:88
		qw422016.N().S(`">`)
//line views/apiKeysCreatePage.qtpl:88
		qw422016.E().S(tenant.Name)
//line views/apiKeysCreatePage.qtpl:88
		qw422016.N().S(`</option>
`)
//line views/apiKeysCreatePage.qtpl:89
	}
//line views/apiKeysCreatePage.qtpl:89
	qw422016.N().S(`
`)
//line views/apiKeysCreatePage.qtpl:90
}

//line views/apiKeysCreatePage.qtpl:90
func WriteRenderTenantSelect(qq422016 qtio422016.Writer, tenants []TenantInfo) {
//line views/apiKeysCreatePage.qtpl:90
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/apiKeysCreatePage.qtpl:90
	StreamRenderTenantSelect(qw422016, tenants)
//line views/apiKeysCreatePage.qtpl:90
	qt422016.ReleaseWriter(qw422016)
//line views/apiKeysCreatePage.qtpl:90
}

//line views/apiKeysCreatePage.qtpl:90
func RenderTenantSelect(tenants []TenantInfo) string {
//line views/apiKeysCreatePage.qtpl:90
	qb422016 := qt422016.AcquireByteBuffer()
//line views/apiKeysCreatePage.qtpl:90
	WriteRenderTenantSelect(qb422016, tenants)
//line views/apiKeysCreatePage.qtpl:90
	qs422016 := string(qb422016.B)
//line views/apiKeysCreatePage.qtpl:90
	qt422016.ReleaseByteBuffer(qb422016)
//line views/apiKeysCreatePage.qtpl:90
	return qs422016
//line views/apiKeysCreatePage.qtpl:90
}

//line views/apiKeysCreatePage.qtpl:92
func StreamRenderPermissionTables(qw422016 *qt422016.Writer, permissions []ApiKeysCreatePermission) {
//line views/apiKeysCreatePage.qtpl:92
	qw422016.N().S(`
<table class="min-w-full bg-white border border-gray-300">
    <thead>
        <tr class="bg-secondary-400 text-secondary-100">
            <th class="py-2 px-4" colspan="2">
                <span class="ml-2 float-left">Device Permissions</span>

            </th>
            </th class="py-2 px-4">
            <th>
                <input type="checkbox" _="on changed toggle @checked on <input/>"
                    class="form-checkbox h-4 w-4 text-secondary-500 cursor-pointer">
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td class="py-2 px-4">
                READ_DEVICES
            </td>
            <td class="py-2 px-4">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ac justo ut ex fermentum vulputate ac ac
                libero. Vestibulum nec quam at orci tincidunt consectetur. Fusce nec sapien in metus convallis luctus.
            </td>
            <td class="py-2 px-4">
                <input type="checkbox" id="checkbox1" class="form-checkbox h-4 w-4 text-secondary-500 cursor-pointer">
            </td>
        </tr>
        <tr>
            <td class="py-2 px-4">
                WRITE_DEVICES
            </td>
            <td class="py-2 px-4">
                Sed ac justo ut ex fermentum vulputate ac ac libero. Vestibulum nec quam at orci tincidunt consectetur.
                Fusce nec sapien in metus convallis luctus. Integer commodo, dolor a gravida luctus, odio turpis commodo
                nisi.
            </td>
            <td class="py-2 px-4">
                <label for="checkbox2" class="cursor-pointer">
                    <input type="checkbox" id="checkbox2" class="form-checkbox h-4 w-4 text-blue-500 cursor-pointer">
                </label>
            </td>
        </tr>
    </tbody>
</table>
`)
//line views/apiKeysCreatePage.qtpl:137
}

//line views/apiKeysCreatePage.qtpl:137
func WriteRenderPermissionTables(qq422016 qtio422016.Writer, permissions []ApiKeysCreatePermission) {
//line views/apiKeysCreatePage.qtpl:137
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/apiKeysCreatePage.qtpl:137
	StreamRenderPermissionTables(qw422016, permissions)
//line views/apiKeysCreatePage.qtpl:137
	qt422016.ReleaseWriter(qw422016)
//line views/apiKeysCreatePage.qtpl:137
}

//line views/apiKeysCreatePage.qtpl:137
func RenderPermissionTables(permissions []ApiKeysCreatePermission) string {
//line views/apiKeysCreatePage.qtpl:137
	qb422016 := qt422016.AcquireByteBuffer()
//line views/apiKeysCreatePage.qtpl:137
	WriteRenderPermissionTables(qb422016, permissions)
//line views/apiKeysCreatePage.qtpl:137
	qs422016 := string(qb422016.B)
//line views/apiKeysCreatePage.qtpl:137
	qt422016.ReleaseByteBuffer(qb422016)
//line views/apiKeysCreatePage.qtpl:137
	return qs422016
//line views/apiKeysCreatePage.qtpl:137
}

//line views/apiKeysCreatePage.qtpl:140
type ApiKeysCreatePage struct {
	layout.BasePage
	Tenants []TenantInfo
}

type ApiKeysCreatePermission struct {
	Name        string
	Description string
}
