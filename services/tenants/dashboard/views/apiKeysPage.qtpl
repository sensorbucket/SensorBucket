{% import "time" %}
{% import "sensorbucket.nl/sensorbucket/pkg/layout" %}
{% import "strings" %}
{% func (p *ApiKeysPage) Body() %}
<div class="w-full xl:w-2/3 mx-auto bg-white border rounded-md">
    <header class="w-full flex items-center justify-between border-b py-2 px-4 text-sm text-slate-700">
        <section>
            API Keys
        </section>
        <section class="flex gap-2">
            <button
                class="text-xs bg-emerald-400 hover:bg-emerald-500 text-white border border-emerald-500 rounded px-2 py-1"
                hx-get="{%s U(" /api-keys/create") %}" hx-target="main" hx-push-url="true">
                Create
            </button>
        </section>
    </header>
    <div> {%= RenderApiKeyTable(p.Tenants, p.TenantsNextPage) %}</div>
</div>
{% endfunc %}

{% func RenderApiKeyTable(tenants []TenantInfo, tenantsNextPage string) %}
{% for _, tenant := range tenants %}
<table class="w-full text-sm border-separate border-spacing-0 mb-3" id="device-table">
    <thead>
        {%= RenderApiKeyRowHeading(tenant) %}
    </thead>
    <tbody _="init toggle the *display of me" id="tenant-table-{%d tenant.ID %}">
    </tbody>
</table>
{% endfor %}
{% endfunc %}

{% func RenderApiKeyRowHeading(tenant TenantInfo) %}
<tr class="cursor-pointer h-10 border-b font-bold text-secondary-100 bg-secondary-400"
    hx-trigger="click once" 
    hx-get="/api-keys/table?tenant_id={%d tenant.ID %}" 
    hx-target="#tenant-table-{%d tenant.ID %}"
    hx-swap="beforeend"
    _="on click toggle the *display of #tenant-table-{%d tenant.ID %} then toggle .rotate-180 on #collapse-{%d tenant.ID %}"
    >
    <td class="px-4" colspan="4">
        <span>{%s tenant.Name %}</span>
    </td>
    <td colspan="1">
        <iconify-icon id="collapse-{%d tenant.ID %}" icon="ooui:collapse" class="px-4 float-right rotate-180"></iconify-icon>
    </td>
</tr>
{% endfunc %}

{% func RenderApiKeyRows(keys []ApiKey, nextPage string) %}
{% for _, key := range keys %}
<tr class="hover:bg-slate-50 group key w-full">
    <td title="{%s key.Name %}" class="px-4 h-10 border-b w-[4em] max-w-[4em] truncate">{%s key.Name %}</td>
    <td class="px-4 h-10 border-b w-[2em] max-w-[2em] truncate">{%s key.Created.Format("02/01/2006") %}</td>
    <td class="px-4 h-10 border-b w-[2em] max-w-[2em] truncate">
        {% if key.ExpirationDate != nil %}
        {%s key.ExpirationDate.Format("02/01/2006") %}
        {% else %}
        -
        {% endif %}
    </td>
    <td class="px-4 h-10 border-b truncate w-[1em] max-w-[1em]">
        {%s strings.Join(key.Permissions, ", ") %}
    </td>
    <td class="px-4 h-10 border-b w-[1em] max-w-[1em]">
        <button hx-delete="/api-keys/revoke/{%d key.ID %}" hx-trigger="click once" hx-target="closest tr" hx-swap="innerHTML"
            class="float-right text-xs bg-red-400 hover:bg-red-500 text-white border border-red-500 rounded px-2 py-1">
            Revoke
        </button>
    </td>
</tr>
{% endfor %}
{% if nextPage != "" %}
<tr hx-trigger="click once" hx-get="{%s nextPage %}" hx-swap="outerHTML" class="cursor-pointer key">
    <td class="underline text-sky-600 p-1 text-center" colspan="5">
        <span>Load more...</span>
    </td>
</tr>
{% elseif len(keys) == 0 %}
<tr>
    <td class="italic p-3 text-center" colspan="5">
        <span>No more API keys for this organisation...</span>
    </td>
</tr>
{% endif %}
{% endfunc %}

{% code
type ApiKeysPage struct {
layout.BasePage
Tenants []TenantInfo
TenantsNextPage string
}

type TenantInfo struct {
ID int
Name string
}

type ApiKey struct {
ID int
TenantID int
Name string
ExpirationDate *time.Time
Permissions []string
Created time.Time
}
%}