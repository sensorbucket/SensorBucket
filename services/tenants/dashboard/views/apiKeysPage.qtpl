{% import "time" %}
{% import "sensorbucket.nl/sensorbucket/pkg/layout" %}
{% import "strings" %}
{% func (p *ApiKeysPage) Body() %}
<div class="w-full xl:w-2/3 mx-auto bg-white border rounded-md">
    <header class="w-full flex items-center justify-between border-b py-2 px-4 text-sm text-slate-700">
        <section>
            API Keys
        </section>
        <section class="flex gap-2">
            <button 
                class="text-xs bg-emerald-400 hover:bg-emerald-500 text-white border border-emerald-500 rounded px-2 py-1"
                hx-get="{%s U("/api-keys/create") %}"
                hx-target="main"
                hx-push-url="true"
            >
            Create
            </button>
        </section>
    </header>
    <div> {%= RenderApiKeyTable(p.ApiKeys) %}</div>
</div>
{% endfunc %}

{% func RenderApiKeyTable(keyCollection map[TenantInfo][]ApiKey) %}
<table class="w-full text-sm border-separate border-spacing-0" id="device-table">
    <thead class="text-left text-slate-500 sticky top-0 bg-white">
        <tr class="h-10">
            <th class="font-normal border-b align-middle px-4">
                Name
            </th>
            <th class="font-normal border-b align-middle px-4">
                Created
            </th>
            <th class="font-normal border-b align-middle px-4">
                Expiration Date
            </th>
            <th class="font-normal border-b align-middle px-4">
                Permissions
            </th>
            <th>
                <!--Remove action-->
            </th>
        </tr>
    </thead>
    <tbody>
        {% for tenant, keys := range keyCollection %}
            {%= RenderApiKeyRowHeading(tenant.Name) %}
            {%= RenderApiKeyRows(keys) %}
        {% endfor %}
    </tbody>
</table>
{% endfunc %}
{% func RenderApiKeyRowHeading(tenantName string) %}
<tr>
    <td class="px-4 h-10 border-b font-bold text-secondary-100 bg-secondary-400" colspan="5">
        <label for="tenant">{%s tenantName %}</label>
    </td>
</tr>
{% endfunc %}

{% func RenderApiKeyRows(keys []ApiKey) %}
{% for _, key := range keys %}
<tr class="hover:bg-slate-50 group">
    <td class="px-4 h-10 border-b">{%s key.Name %}</td>
    <td class="px-4 h-10 border-b">{%s key.Created.Format("02/01/2006") %}</td>
    <td class="px-4 h-10 border-b">
        {% if key.ExpirationDate != nil %}
            {%s key.ExpirationDate.Format("02/01/2006") %}
        {% else %}
            -
        {% endif %}
    </td>
    <td class="px-4 h-10 border-b truncate" style="max-width: 15rem;">
        {%s strings.Join(key.Permissions, ", ") %}
        <!-- <div class="
            hidden hover:block group-hover:block absolute text-white bg-gray-800 bottom-full mb-2 left-1/2 -translate-x-1/2 px-3 rounded py-1
            after:content-['_'] after:absolute after:top-full after:-translate-y-[0.25rem] after:left-1/2 after:-translate-x-1/2 after:bg-gray-800 after:w-2 after:h-2 after:rotate-45
        ">
            {%s strings.Join(key.Permissions, ", ") %}
        </div> -->
    </td>
    <td class="px-4 h-10 border-b">
        <button hx-delete="/api-keys/revoke/{%d key.ID %}"
            hx-trigger="click"
            hx-target="closest tr"
            hx-swap="innerHTML"
        class="text-xs bg-red-400 hover:bg-red-500 text-white border border-red-500 rounded px-2 py-1">
            Revoke
        </button>  
    </td>
</tr>
{% endfor %}
{% endfunc %}

{% code
type ApiKeysPage struct {
    layout.BasePage
    ApiKeysNextPage string
    ApiKeys map[TenantInfo][]ApiKey
}

type TenantInfo struct {
    ID int
    Name string
}

type ApiKey struct {
    ID int
    TenantName string
    Name string
    ExpirationDate *time.Time
    Permissions []string
    Created time.Time
}
%}
