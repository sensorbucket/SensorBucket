apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-ingress
  namespace: default
  labels:
    app: http-ingress
spec:
  selector:
    matchLabels:
      app: http-ingress
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container:  http-ingress
      labels:
        app: http-ingress
    spec:
      containers:
      - name: http-ingress
        image: "ghcr.io/sensorbucket/http-importer:edge"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: HTTP_ADDR       
          valueFrom:
            configMapKeyRef:
              name: http-ingress
              key: HTTP_ADDR
        - name: HEALTH_ADDR     
          valueFrom:
            configMapKeyRef:
              name: http-ingress
              key: HEALTH_ADDR
        - name: AMQP_HOST       
          valueFrom:
            configMapKeyRef:
              name: http-ingress
              key: AMQP_HOST
        - name: AMQP_XCHG       
          valueFrom:
            configMapKeyRef:
              name: http-ingress
              key: AMQP_XCHG
        - name: AMQP_XCHG_TOPIC 
          valueFrom:
            configMapKeyRef:
              name: http-ingress
              key: AMQP_XCHG_TOPIC
        ports:
        - containerPort: 3000
      restartPolicy: Always
