version: '3'
name: sensorbucket
services:
  caddy:
    image: caddy:alpine
    ports:
      - 3000:80
    volumes:
      - ./tools/caddy:/etc/caddy

  dashboard:
    build: 
      context: ./services/dashboard
      dockerfile: Dockerfile
      target: builder
    command: yarn dev --host=0.0.0.0 --port=3000
    environment:
      - PUBLIC_EP_DATASTREAMS=http://caddy/api/datastreams
      - PUBLIC_EP_SENSORS=http://caddy/api/sensors
      - PUBLIC_EP_DEVICES=http://caddy/api/devices
      - PUBLIC_EP_PIPELINES=http://caddy/api/pipelines
      - PUBLIC_EP_MEASUREMENTS=http://caddy/api/measurements
    volumes:
      - ./services/dashboard:/app:cached

  core:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=core
    - APP_TYPE=service
    - DB_DSN=postgresql://sensorbucket:sensorbucket@db:5432/sensorbucket?sslmode=disable
    - HTTP_ADDR=:3000
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_XCHG=pipeline.messages
    - SVC_PIPELINE=http://pipeline:3000

  ingressarchiver:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=ingress-archiver
    - APP_TYPE=service
    - DB_DSN=postgresql://sensorbucket:sensorbucket@db:5432/ingressarchiver?sslmode=disable
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_XCHG=pipeline.messages
    - AMQP_XCHG_TOPIC=ingress.#


  httpimporter:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=httpimporter
    - APP_TYPE=service
    - HTTP_ADDR=:3000
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_XCHG=ingress
    - AMQP_XCHG_TOPIC=ingress.httpimporter

  worker_thethingsnetwork:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=the-things-network
    - APP_TYPE=worker
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_QUEUE=the-things-network
    - AMQP_ERR_TOPIC=errors
    - AMQP_XCHG=pipeline.messages
    - SVC_DEVICE=http://core:3000

  worker_multiflexmeter:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=multiflexmeter-groundwater-level
    - APP_TYPE=worker
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_QUEUE=multiflexmeter-groundwater-level
    - AMQP_ERR_TOPIC=errors
    - AMQP_XCHG=pipeline.messages

  worker_multiflexmeter_pm:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=multiflexmeter-particulatematter
    - APP_TYPE=worker
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_QUEUE=multiflexmeter-particulatematter
    - AMQP_ERR_TOPIC=errors
    - AMQP_XCHG=pipeline.messages

  worker_pzld_sensorbox:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=pzld-sensorbox
    - APP_TYPE=worker
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_QUEUE=pzld-sensorbox
    - AMQP_ERR_TOPIC=errors
    - AMQP_XCHG=pipeline.messages

  db:
    image: timescale/timescaledb-postgis:latest-pg12
    ports:
      - 5432:5432
    volumes:
      - ./tools/postgres.d:/docker-entrypoint-initdb.d
    environment:
    - POSTGRES_USER=sensorbucket
    - POSTGRES_PASSWORD=sensorbucket
    - POSTGRES_DB=sensorbucket
  dbweb:
    image: dockette/adminer:pgsql

  mq:
    image: rabbitmq:3.8-management
    ports:
      - 5672:5672

  openapi:
    image: swaggerapi/swagger-editor
    environment:
      - URL=/dev/api/ref/api.yaml
    volumes:
      - ./tools/openapi:/usr/share/nginx/html/ref

networks:
  default:
    name: sensorbucket_network
