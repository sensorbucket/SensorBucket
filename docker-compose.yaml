version: '3'
name: sensorbucket
services:
  caddy:
    image: caddy:alpine
    ports:
      - 3000:80
    volumes:
      - ./tools/caddy:/etc/caddy

  dashboard:
    build:
      context: .
      dockerfile: services/dashboard/Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - STATIC_PATH=services/dashboard/static
    - SB_API=http://caddy
    - IMAGE_SBOX=sbox
    - IMAGE_TTN=ttn
    - IMAGE_MEAS=meas
    - IMAGE_MFM=mfm
    - IMAGE_MFM2=mfm-2

  core:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=core
    - APP_TYPE=service
    - DB_DSN=postgresql://sensorbucket:sensorbucket@db:5432/sensorbucket?sslmode=disable
    - HTTP_ADDR=:3000
    - AMQP_HOST=amqp://guest:guest@mq:5672/

  tracing:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=tracing
    - APP_TYPE=service
    - DB_DSN=postgresql://sensorbucket:sensorbucket@db:5432/tracing?sslmode=disable
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_QUEUE_PIPELINEMESSAGES=pipeline.messages
    - AMQP_QUEUE_ERRORS=errors
    - AMQP_QUEUE_INGRESS=archive-ingress
    - AMQP_XCHG_INGRESS=ingress
    - AMQP_XCHG_INGRESS_TOPIC=ingress.#

  userworkers:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - APP_NAME=fission-user-workers
      - APP_TYPE=service
      - HTTP_ADDR=:3000
      - DB_DSN=postgresql://sensorbucket:sensorbucket@db:5432/userworkers?sslmode=disable
      - WORKER_NAMESPACE=default
      - AMQP_XCHG=pipeline.messages
      - CTRL_TYPE=docker
        #- CTRL_K8S_CONFIG=/workspace/tools/kube/config
        #- CTRL_K8S_MQT_IMAGE=
        #- CTRL_K8S_MQT_SECRET=
        #- CTRL_K8S_PULL_SECRET=
        #- CTRL_DOCKER_WORKERS_EP="http://caddy/api/workers"
      - CTRL_DOCKER_WORKER_IMAGE=sensorbucket/docker-worker:latest
        #- CTRL_DOCKER_AMQP_HOST=
        #- CTRL_DOCKER_AMQP_XCHG=
        #- CTRL_DOCKER_ENDPOINT_DEVICES=
        #- CTRL_DOCKER_WORKER_NET=
  # This container should only build, the userworkers service will start containers of this
  # image for every created worker
  userworkers_dockerworker:
    image: sensorbucket/docker-worker:latest
    build:
      context: ./services/fission-user-workers/service/dockerworker
      dockerfile: Dockerfile
    entrypoint: sleep 1
                  
            
  httpimporter:
    build: 
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/workspace:cached
    environment:
    - APP_NAME=httpimporter
    - APP_TYPE=service
    - HTTP_ADDR=:3000
    - AMQP_HOST=amqp://guest:guest@mq:5672/
    - AMQP_XCHG=ingress
    - AMQP_XCHG_TOPIC=ingress.httpimporter

  db:
    image: timescale/timescaledb-postgis:latest-pg12
    volumes:
      - ./tools/postgres.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    environment:
    - POSTGRES_USER=sensorbucket
    - POSTGRES_PASSWORD=sensorbucket
    - POSTGRES_DB=sensorbucket
  dbweb:
    image: dockette/adminer:pgsql

  mail-server:
    image: mailhog/mailhog
    ports:
      - 1025:1025

  mq:
    image: rabbitmq:3.8-management

  openapi:
    image: swaggerapi/swagger-editor
    environment:
      - URL=/dev/api/ref/api.yaml
    volumes:
      - ./tools/openapi:/usr/share/nginx/html/ref

networks:
  default:
    name: sensorbucket_network
