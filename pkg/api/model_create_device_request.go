/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex 

API version: 1.0
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the CreateDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceRequest{}

// CreateDeviceRequest struct for CreateDeviceRequest
type CreateDeviceRequest struct {
	Code string `json:"code"`
	Description *string `json:"description,omitempty"`
	Latitude *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
	LocationDescription *string `json:"location_description,omitempty"`
	Properties map[string]interface{} `json:"properties,omitempty"`
}

// NewCreateDeviceRequest instantiates a new CreateDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceRequest(code string) *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	this.Code = code
	return &this
}

// NewCreateDeviceRequestWithDefaults instantiates a new CreateDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceRequestWithDefaults() *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	return &this
}

// GetCode returns the Code field value
func (o *CreateDeviceRequest) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CreateDeviceRequest) SetCode(v string) {
	o.Code = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateDeviceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetLatitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *CreateDeviceRequest) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetLongitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *CreateDeviceRequest) SetLongitude(v float32) {
	o.Longitude = &v
}

// GetLocationDescription returns the LocationDescription field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetLocationDescription() string {
	if o == nil || IsNil(o.LocationDescription) {
		var ret string
		return ret
	}
	return *o.LocationDescription
}

// GetLocationDescriptionOk returns a tuple with the LocationDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetLocationDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.LocationDescription) {
		return nil, false
	}
	return o.LocationDescription, true
}

// HasLocationDescription returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasLocationDescription() bool {
	if o != nil && !IsNil(o.LocationDescription) {
		return true
	}

	return false
}

// SetLocationDescription gets a reference to the given string and assigns it to the LocationDescription field.
func (o *CreateDeviceRequest) SetLocationDescription(v string) {
	o.LocationDescription = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *CreateDeviceRequest) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o CreateDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.LocationDescription) {
		toSerialize["location_description"] = o.LocationDescription
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableCreateDeviceRequest struct {
	value *CreateDeviceRequest
	isSet bool
}

func (v NullableCreateDeviceRequest) Get() *CreateDeviceRequest {
	return v.value
}

func (v *NullableCreateDeviceRequest) Set(val *CreateDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceRequest(val *CreateDeviceRequest) *NullableCreateDeviceRequest {
	return &NullableCreateDeviceRequest{value: val, isSet: true}
}

func (v NullableCreateDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


