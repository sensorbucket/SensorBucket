/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex 

API version: 1.1-rc1
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// Pipeline struct for Pipeline
type Pipeline struct {
	Id string `json:"id"`
	Description string `json:"description"`
	Steps []string `json:"steps"`
	// either active or inactive
	Status string `json:"status"`
	LastStatusChange time.Time `json:"last_status_change"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

// NewPipeline instantiates a new Pipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipeline(id string, description string, steps []string, status string, lastStatusChange time.Time) *Pipeline {
	this := Pipeline{}
	this.Id = id
	this.Description = description
	this.Steps = steps
	this.Status = status
	this.LastStatusChange = lastStatusChange
	return &this
}

// NewPipelineWithDefaults instantiates a new Pipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineWithDefaults() *Pipeline {
	this := Pipeline{}
	return &this
}

// GetId returns the Id field value
func (o *Pipeline) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Pipeline) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *Pipeline) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Pipeline) SetDescription(v string) {
	o.Description = v
}

// GetSteps returns the Steps field value
func (o *Pipeline) GetSteps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetStepsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *Pipeline) SetSteps(v []string) {
	o.Steps = v
}

// GetStatus returns the Status field value
func (o *Pipeline) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Pipeline) SetStatus(v string) {
	o.Status = v
}

// GetLastStatusChange returns the LastStatusChange field value
func (o *Pipeline) GetLastStatusChange() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastStatusChange
}

// GetLastStatusChangeOk returns a tuple with the LastStatusChange field value
// and a boolean to check if the value has been set.
func (o *Pipeline) GetLastStatusChangeOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastStatusChange, true
}

// SetLastStatusChange sets field value
func (o *Pipeline) SetLastStatusChange(v time.Time) {
	o.LastStatusChange = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Pipeline) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Pipeline) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *Pipeline) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

func (o Pipeline) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["steps"] = o.Steps
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["last_status_change"] = o.LastStatusChange
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePipeline struct {
	value *Pipeline
	isSet bool
}

func (v NullablePipeline) Get() *Pipeline {
	return v.value
}

func (v *NullablePipeline) Set(val *Pipeline) {
	v.value = val
	v.isSet = true
}

func (v NullablePipeline) IsSet() bool {
	return v.isSet
}

func (v *NullablePipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipeline(val *Pipeline) *NullablePipeline {
	return &NullablePipeline{value: val, isSet: true}
}

func (v NullablePipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


