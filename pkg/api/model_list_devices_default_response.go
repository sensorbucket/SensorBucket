/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex 

API version: 1.0
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ListDevicesDefaultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDevicesDefaultResponse{}

// ListDevicesDefaultResponse struct for ListDevicesDefaultResponse
type ListDevicesDefaultResponse struct {
	Message *string `json:"message,omitempty"`
	Code *string `json:"code,omitempty"`
	HttpStatus *float32 `json:"http_status,omitempty"`
}

// NewListDevicesDefaultResponse instantiates a new ListDevicesDefaultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDevicesDefaultResponse() *ListDevicesDefaultResponse {
	this := ListDevicesDefaultResponse{}
	return &this
}

// NewListDevicesDefaultResponseWithDefaults instantiates a new ListDevicesDefaultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDevicesDefaultResponseWithDefaults() *ListDevicesDefaultResponse {
	this := ListDevicesDefaultResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ListDevicesDefaultResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDevicesDefaultResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ListDevicesDefaultResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ListDevicesDefaultResponse) SetMessage(v string) {
	o.Message = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ListDevicesDefaultResponse) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDevicesDefaultResponse) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ListDevicesDefaultResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ListDevicesDefaultResponse) SetCode(v string) {
	o.Code = &v
}

// GetHttpStatus returns the HttpStatus field value if set, zero value otherwise.
func (o *ListDevicesDefaultResponse) GetHttpStatus() float32 {
	if o == nil || IsNil(o.HttpStatus) {
		var ret float32
		return ret
	}
	return *o.HttpStatus
}

// GetHttpStatusOk returns a tuple with the HttpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDevicesDefaultResponse) GetHttpStatusOk() (*float32, bool) {
	if o == nil || IsNil(o.HttpStatus) {
		return nil, false
	}
	return o.HttpStatus, true
}

// HasHttpStatus returns a boolean if a field has been set.
func (o *ListDevicesDefaultResponse) HasHttpStatus() bool {
	if o != nil && !IsNil(o.HttpStatus) {
		return true
	}

	return false
}

// SetHttpStatus gets a reference to the given float32 and assigns it to the HttpStatus field.
func (o *ListDevicesDefaultResponse) SetHttpStatus(v float32) {
	o.HttpStatus = &v
}

func (o ListDevicesDefaultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDevicesDefaultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.HttpStatus) {
		toSerialize["http_status"] = o.HttpStatus
	}
	return toSerialize, nil
}

type NullableListDevicesDefaultResponse struct {
	value *ListDevicesDefaultResponse
	isSet bool
}

func (v NullableListDevicesDefaultResponse) Get() *ListDevicesDefaultResponse {
	return v.value
}

func (v *NullableListDevicesDefaultResponse) Set(val *ListDevicesDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDevicesDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDevicesDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDevicesDefaultResponse(val *ListDevicesDefaultResponse) *NullableListDevicesDefaultResponse {
	return &NullableListDevicesDefaultResponse{value: val, isSet: true}
}

func (v NullableListDevicesDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDevicesDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


