/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex 

API version: 1.0
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the PaginatedResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedResponseLinks{}

// PaginatedResponseLinks struct for PaginatedResponseLinks
type PaginatedResponseLinks struct {
	Previous *string `json:"previous,omitempty"`
	Next *string `json:"next,omitempty"`
}

// NewPaginatedResponseLinks instantiates a new PaginatedResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedResponseLinks() *PaginatedResponseLinks {
	this := PaginatedResponseLinks{}
	return &this
}

// NewPaginatedResponseLinksWithDefaults instantiates a new PaginatedResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedResponseLinksWithDefaults() *PaginatedResponseLinks {
	this := PaginatedResponseLinks{}
	return &this
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *PaginatedResponseLinks) SetPrevious(v string) {
	o.Previous = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *PaginatedResponseLinks) SetNext(v string) {
	o.Next = &v
}

func (o PaginatedResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

type NullablePaginatedResponseLinks struct {
	value *PaginatedResponseLinks
	isSet bool
}

func (v NullablePaginatedResponseLinks) Get() *PaginatedResponseLinks {
	return v.value
}

func (v *NullablePaginatedResponseLinks) Set(val *PaginatedResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedResponseLinks(val *PaginatedResponseLinks) *NullablePaginatedResponseLinks {
	return &NullablePaginatedResponseLinks{value: val, isSet: true}
}

func (v NullablePaginatedResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


