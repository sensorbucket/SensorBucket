/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex' 

API version: 1.2.5
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// CreateApiKeyRequest struct for CreateApiKeyRequest
type CreateApiKeyRequest struct {
	Name string `json:"name"`
	TenantId int64 `json:"tenant_id"`
	Permissions []string `json:"permissions,omitempty"`
	ExpirationDate *time.Time `json:"expiration_date,omitempty"`
}

// NewCreateApiKeyRequest instantiates a new CreateApiKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApiKeyRequest(name string, tenantId int64) *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	this.Name = name
	this.TenantId = tenantId
	return &this
}

// NewCreateApiKeyRequestWithDefaults instantiates a new CreateApiKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApiKeyRequestWithDefaults() *CreateApiKeyRequest {
	this := CreateApiKeyRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateApiKeyRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateApiKeyRequest) SetName(v string) {
	o.Name = v
}

// GetTenantId returns the TenantId field value
func (o *CreateApiKeyRequest) GetTenantId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetTenantIdOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *CreateApiKeyRequest) SetTenantId(v int64) {
	o.TenantId = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *CreateApiKeyRequest) GetPermissions() []string {
	if o == nil || isNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetPermissionsOk() ([]string, bool) {
	if o == nil || isNil(o.Permissions) {
    return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *CreateApiKeyRequest) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *CreateApiKeyRequest) SetPermissions(v []string) {
	o.Permissions = v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CreateApiKeyRequest) GetExpirationDate() time.Time {
	if o == nil || isNil(o.ExpirationDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApiKeyRequest) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.ExpirationDate) {
    return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CreateApiKeyRequest) HasExpirationDate() bool {
	if o != nil && !isNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *CreateApiKeyRequest) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

func (o CreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !isNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !isNil(o.ExpirationDate) {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	return json.Marshal(toSerialize)
}

type NullableCreateApiKeyRequest struct {
	value *CreateApiKeyRequest
	isSet bool
}

func (v NullableCreateApiKeyRequest) Get() *CreateApiKeyRequest {
	return v.value
}

func (v *NullableCreateApiKeyRequest) Set(val *CreateApiKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApiKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApiKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApiKeyRequest(val *CreateApiKeyRequest) *NullableCreateApiKeyRequest {
	return &NullableCreateApiKeyRequest{value: val, isSet: true}
}

func (v NullableCreateApiKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApiKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


