/*
Sensorbucket API

SensorBucket processes data from different sources and devices into a single standardized format.  An applications connected to SensorBucket, can use all devices SensorBucket supports.  Missing a device or source? SensorBucket is designed to be scalable and extendable. Create your own worker that receives data from an AMQP source, process said data and output in the expected worker output format.  Find out more at: https://developer.sensorbucket.nl/  Developed and designed by Provincie Zeeland and Pollex' 

API version: 1.1-rc1
Contact: info@pollex.nl
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// UpdatePipelineRequest struct for UpdatePipelineRequest
type UpdatePipelineRequest struct {
	Description *string `json:"description,omitempty"`
	Steps []string `json:"steps,omitempty"`
	// Used to change a pipeline from inactive to active or vice-versa.  Moving from active to inactive can also be achieve by `DELETE`ing the pipeline resource. 
	Status *string `json:"status,omitempty"`
}

// NewUpdatePipelineRequest instantiates a new UpdatePipelineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePipelineRequest() *UpdatePipelineRequest {
	this := UpdatePipelineRequest{}
	return &this
}

// NewUpdatePipelineRequestWithDefaults instantiates a new UpdatePipelineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePipelineRequestWithDefaults() *UpdatePipelineRequest {
	this := UpdatePipelineRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdatePipelineRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePipelineRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdatePipelineRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdatePipelineRequest) SetDescription(v string) {
	o.Description = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *UpdatePipelineRequest) GetSteps() []string {
	if o == nil || isNil(o.Steps) {
		var ret []string
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePipelineRequest) GetStepsOk() ([]string, bool) {
	if o == nil || isNil(o.Steps) {
    return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *UpdatePipelineRequest) HasSteps() bool {
	if o != nil && !isNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []string and assigns it to the Steps field.
func (o *UpdatePipelineRequest) SetSteps(v []string) {
	o.Steps = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdatePipelineRequest) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePipelineRequest) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdatePipelineRequest) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdatePipelineRequest) SetStatus(v string) {
	o.Status = &v
}

func (o UpdatePipelineRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatePipelineRequest struct {
	value *UpdatePipelineRequest
	isSet bool
}

func (v NullableUpdatePipelineRequest) Get() *UpdatePipelineRequest {
	return v.value
}

func (v *NullableUpdatePipelineRequest) Set(val *UpdatePipelineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePipelineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePipelineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePipelineRequest(val *UpdatePipelineRequest) *NullableUpdatePipelineRequest {
	return &NullableUpdatePipelineRequest{value: val, isSet: true}
}

func (v NullableUpdatePipelineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePipelineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


